{"version":3,"file":"static/js/286.7b3e3c66.chunk.js","mappings":"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","sources":["components/card/CardPizza.styled.js","components/cardButtonBox/CardButtonBox.styled.js","components/section/Section.styled.js","pages/CartPages.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardImg.js"],"sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const CardPizza = styled(Card)`\n  max-width: 350px;\n  height: 600px;\n  overflow: hidden;\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 20px);\n    height: 580px;\n  }\n  @media screen and (min-width: 991px) {\n    flex-basis: calc(100% / 2 - 20px);\n    height: 580px;\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n    height: 580px;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardButtonBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin-top: 10px;\n`;\n","import { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const Section = styled(Container)`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-align-items: center;\n  }\n`;\n","import { CardPizza } from 'components/card/CardPizza.styled';\nimport { CardButtonBox } from 'components/cardButtonBox/CardButtonBox.styled';\nimport { Section } from 'components/section/Section.styled';\nimport { Button, Card, CardImg, Container } from 'react-bootstrap';\nimport { FiMinus, FiPlus } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { productsOperations, productsSelectors } from 'redux/products';\n\nconst CartPages = () => {\n  const dispath = useDispatch();\n  const cartList = useSelector(productsSelectors.getCartList);\n  const total = cartList.reduce((sum, card) => {\n    return sum + card.quantity * card.price;\n  }, 0);\n  const removeCard = element => {\n    dispath(productsOperations.removePizzaCard(element));\n  };\n  const clearCard = () => {\n    dispath(productsOperations.clearPizzaCard([]));\n  };\n  const minusQuantity = elem => {\n    const currentCart = cartList.find(elemCart => elem.id === elemCart.id);\n    dispath(\n      productsOperations.minusPizzaCard({\n        ...elem,\n        quantity: currentCart.quantity - 1,\n      })\n    );\n  };\n  const plusQuantity = elem => {\n    const currentCart = cartList.find(elemCart => elem.id === elemCart.id);\n    dispath(\n      productsOperations.plusPizzaCard({\n        ...elem,\n        quantity: currentCart.quantity + 1,\n      })\n    );\n  };\n  return (\n    <>\n      {cartList.length === 0 ? (\n        <Section>\n          <h3>\n            Please, choose pizza <Link to={'/'}>here</Link>\n          </h3>\n        </Section>\n      ) : (\n        <Section>\n          {cartList.map(elem => (\n            <CardPizza key={elem.id}>\n              <CardImg variant=\"top\" src={elem.image} />\n              <Card.Body>\n                <Card.Title>{elem.title}</Card.Title>\n                <Card.Text>{elem.description}</Card.Text>\n\n                <CardButtonBox>\n                  {cartList.find(elemCart => elem.id === elemCart.id) && (\n                    <>\n                      <Button variant=\"secondary\">\n                        <FiMinus onClick={() => minusQuantity(elem)} />\n                      </Button>\n\n                      <span\n                        style={{\n                          width: '25px',\n                          display: 'flex',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {elem.quantity}\n                      </span>\n                      <Button variant=\"secondary\">\n                        <FiPlus onClick={() => plusQuantity(elem)} />\n                      </Button>\n                      <Card.Text>\n                        Price: {elem.price * elem.quantity} UAH\n                      </Card.Text>\n                    </>\n                  )}\n                </CardButtonBox>\n                <Button\n                  onClick={() => removeCard(elem)}\n                  style={{ marginTop: '20px' }}\n                  variant=\"secondary\"\n                >\n                  Remove\n                </Button>\n              </Card.Body>\n            </CardPizza>\n          ))}\n          <Container\n            style={{\n              marginTop: '20px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'end',\n            }}\n          >\n            <h4 style={{ textAlign: 'end' }}>Total: {total} UAH</h4>\n            <Button\n              style={{ textAlign: 'end' }}\n              variant=\"secondary\"\n              onClick={clearCard}\n            >\n              Make an order\n            </Button>\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default CartPages;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;"],"names":["CardPizza","styled","Card","CardButtonBox","Section","Container","dispath","useDispatch","cartList","useSelector","productsSelectors","total","reduce","sum","card","quantity","price","length","Link","to","map","elem","variant","src","image","title","description","find","elemCart","id","onClick","currentCart","productsOperations","minusQuantity","style","width","display","justifyContent","plusQuantity","element","marginTop","flexDirection","alignItems","textAlign","Button","React","ref","as","bsPrefix","size","active","disabled","className","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Object","assign","Img","CardImg","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}